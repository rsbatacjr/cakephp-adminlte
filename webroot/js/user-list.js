var userListPage=function(t,e,a){var s=notificationHelper,r=dialogHelper,l={initialize:function(){t("#hdn-id").attr("value",0),t("#txt-first_name").prop("value",""),t("#txt-last_name").prop("value",""),t("#txt-email").prop("value",""),t("#sel-role").val(0),t("#chk-active").attr("checked",!1)},setDefaults:function(){t.ajax({url:"/UserRoles/GetUserRoleOptions/",success:function(e){t.each(e,function(){t("#sel-role").append("<option value='"+t(this)[0].id+"'>"+t(this)[0].role+"</option>")})}})},setEvents:function(){t("#add_user").on("click",function(e){t("#userEditor").attr("data-mode","new"),t("#userEditor").find("#title").text("New User"),t("#userEditor").modal("show"),l.initialize()}),t("#example2 tbody tr td:last-child").find(".delete-btn").on("click",function(e){l.delete(t(this).data("id"))})},validateEntries:function(){return!0},save:function(){var e=l.validateEntries();e&&t.ajax({url:"/users/add/",type:"post",data:{first_name:t("#txt-first_name").val(),last_name:t("#txt-last_name").val(),email:t("#txt-email").val(),role_id:t("#sel-role").val(),active:t("#chk-active").is(":checked")?1:0},success:function(t){"success"==t.status?(s.showInformation({msg:t.message,title:"Success"}),window.location.reload()):s.showError({msg:t.message,title:"Error"})},error:function(t){s.showError({msg:"There was an error trying to contact the server, please try again later",title:"Error"})}})},update:function(){t.ajax({url:"/users/edit/",type:"post",data:{id:t("#hdn-id").val(),first_name:t("#txt-first_name").val(),last_name:t("#txt-last_name").val(),email:t("#txt-email").val(),role_id:t("#sel-role").val(),active:t("#chk-active").is(":checked")?1:0},success:function(t){"success"==t.status?(s.showInformation({msg:t.message,title:"Success"}),window.location.reload()):s.showError({msg:t.message,title:"Error"})},error:function(t){s.showError({msg:"There was an error trying to contact the server, please try again later",title:"Error"})}})},delete:function(e){t.ajax({url:"/users/delete/",type:"post",data:{id:e},success:function(t){"success"==t.status?(s.showInformation({msg:t.message,title:"Success"}),window.location.reload()):s.showError({msg:t.message,title:"Error"})},error:function(t){s.showError({msg:"There was an error trying to contact the server, please try again later",title:"Error"})}})}};return{onLoad:function(e){e.saveMethod=function(){"new"==t("#userEditor").data("mode")?l.save():l.update()},r.AddDialog(e),l.setEvents(),l.setDefaults()}}}(jQuery,toastr);$(document).ready(function(){var t="",e={},a=userListPage;e.id="userEditor",e.height=380,e.content="<div class='row'><div class='form-horizontal'><input type='hidden' id='hdn-id'><div class='form-group'><label for='txt-first_name' class='control-label col-xs-3'>First Name</label><div class='col-xs-9'><input type='text' id='txt-first_name' class='form-control' /></div></div><div class='form-group'><label for='txt-last_name' class='control-label col-xs-3'>Last Name</label><div class='col-xs-9'><input type='text' id='txt-last_name' class='form-control' /></div></div><div class='form-group'><label for='txt-email' class='control-label col-xs-3'>Email</label><div class='col-xs-9'><input type='text' id='txt-email' class='form-control' /></div></div><div class='form-group'><label for='sel-role' class='control-label col-xs-3'>Role</label><div class='col-xs-9'><select id='sel-role' class='form-control'><option value=''>-- Select Role --</option></select></div></div><div class='form-group'><label for='chk-active' class='control-label col-xs-3'>Active</label><div class='col-xs-9'><input type='checkbox' id='chk-active' /></div></div></div></div>",$("#example2").DataTable({paging:!0,lengthChange:!0,searching:!0,ordering:!0,info:!0,autoWidth:!1}),$(".dataTables_wrapper > .row > .col-sm-6:first-child").html("<button id='add_user' class='btn btn-primary'>New</button>"),$("input[type=search]").css({width:"400px"}),$("#example2 tbody tr").find("td:first-child").on("click",function(){t=$(this).find("a").data("id"),$.ajax({url:"/Users/GetUserById/"+t,success:function(t){u=t[0],$("#userEditor").attr("data-mode","edit"),$("#"+e.id).find("#title").text("Edit User"),$("#"+e.id).modal("show"),$("#hdn-id").attr("value",u.id),$("#txt-first_name").attr("value",u.person.first_name),$("#txt-last_name").attr("value",u.person.last_name),$("#txt-email").attr("value",u.email),$("#sel-role").val(u.role_id),$("#chk-active").attr("checked",u.active)}})}),a.onLoad(e)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
